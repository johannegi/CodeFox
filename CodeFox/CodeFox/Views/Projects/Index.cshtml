@model CodeFox.Models.ViewModels.ProjectsViewModel
@{
    ViewBag.Title = "Index";
}

<h1>Projects</h1>

<h2>Welcome @Html.DisplayFor(model => model.Name)!</h2>

<h2>My Projects</h2>
<div class="OwnProjects col-sm-12 col-md-12 col-lg-12">
    <div class="container">
        <div class="row">
            <div class="col-sm-4 col-md-3 col-lg-2 Create Project thumbnail">
                <br />
                <br />
                <img src="~/Content/Images/plus.png" data-hsolder-rendered="true" onclick="location.href='@Url.Action("Create", "Projects")';return false;">
                <div class="caption">
                    <h4>@Html.ActionLink("Create new", "Create", "Projects")</h4>
                </div>
            </div>

                @foreach (var item in Model.Projects)
                {
                    <div class="col-sm-4 col-md-3 col-lg-2 Project thumbnail">
                        <img src="~/Content/Images/tester.png" data-holder-rendered="true" onclick="location.href='@Url.Action("Index", "Editor", new { id = item.ID })';return false;" />
                        <div>
                            <h4 class="ProjectName">@Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayFor(model => item.Name).ToString()), "Index", "Editor", new { id = item.ID }, null)</h4>
                            <p><b>Last updated:</b> <br />@Html.DisplayFor(Model => item.DateModified).ToString()</p>
                            <div class="dropdown">
                                <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">
                                    <span class="glyphicon glyphicon-align-justify" aria-hidden="true"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li class="dropdown-item">@Html.ActionLink("Delete", "Delete", "Projects", new { id = item.ID }, null)</li>
                                    <li class="dropdown-item">@Html.ActionLink("Export", "Index", "Editor", new { id = item.ID }, null)</li>
                                    <li href="#my_modal" class="SelectDropDown" data-toggle="modal" data-id="@item.ID">Details</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                        <div class="modal" id="@item.ID">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                        <h4 class="modal-title">Details</h4>
                                    </div>
                                    <div class="modal-body" id="ModalText_@item.ID editor">
                                        <div class="container">
                                            <div class="panel panel-default">
                                                <div class="panel-heading">
                                                    <h3 class="panel-title">Editor</h3>
                                                </div>
                                                <div class="panel-body">
                                                    <div id="editor">
                                                        function foo(items) {
                                                        var x = "All this is syntax highlighted";
                                                        return x;
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="text-center">---End of editor---</div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                                <!-- /.modal-content -->
                            </div>
                            <!-- /.modal-dialog -->
                        </div>
                        <!-- /.modal -->
                }   


        </div>
    </div>
</div>

     
@if (Model.SharedProjects.Count != 0)
{
    <h2>Projects Shared With Me</h2>
    <div class="SharedProjects col-sm-12 col-md-12 col-lg-12">
        <div class="container">
            <div class="row">
                @foreach (var item in Model.SharedProjects)
                {
                    <div class="col-sm-4 col-md-3 col-lg-2 Project thumbnail">
                        <img src="~/Content/Images/tester.png" data-holder-rendered="true" onclick="location.href='@Url.Action("Index", "Editor", new { id = item.ID })';return false;" />
                        <div class="JsOnHover">
                            <h4 class="ProjectName">@Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayFor(model => item.Name).ToString()), "Index", "Editor", new { id = item.ID }, null)</h4><div class="OnHover"><b>Owned by:</b><br />@item.Owner.Username</div><hr id="HiddenLine" />
                            <p><b>Last updated:</b><br /> @Html.DisplayFor(Model => item.DateModified).ToString()</p>
                            <div class="dropdown">
                                <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">
                                    <span class="glyphicon glyphicon-align-justify" aria-hidden="true"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li class="dropdown-item">@Html.ActionLink("Export", "Index", "Editor", new { id = item.ID }, null)</li>
                                    <li href="#my_modal" class="SelectDropDown" data-toggle="modal" data-id="@item.ID">Details</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="modal" id="@item.ID">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                    <h4 class="modal-title">Modal header</h4>
                                </div>
                                <div class="modal-body">
                                    <p id="ModalText_@item.ID"></p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                </div>
            </div>
        </div>
   }


<!-- SCRIPT TO SHOW OWNER IN SHARED PROJECTS  -->
<script type="text/javascript">

    $(".JsOnHover").mouseover(function () {
            $(this).children(".OnHover").show();
        }).mouseout(function () {
        $(this).children(".OnHover").hide();
        });

$('.SelectDropDown').on('click', function (e) {
    // alert($(this).data("id"));
    var ProjectID = $(this).data("id");
    $.ajax({
            url: '/Projects/GetProject',
            dataType: 'html',
            data: { 'ProjectID': ProjectID },
            method: "POST",
            success: function(data)
            {
                if(data == "")
                {
                            $('#ModalText').html('Project Not Found');
                }
            else
            {
                    $('#ModalText_' + ProjectID).html(data.substring(1,data.length-1));
            }
            }
    });
    $('#' + ProjectID).modal();
    return false;
});

    
</script>

<script src="ace.js" type="text/javascript" charset="utf-8"></script>
<script src="theme-twilight.js" type="text/javascript" charset="utf-8"></script>
<script src="mode-xml.js" type="text/javascript" charset="utf-8"></script>
<script>
window.onload = function() {
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/twilight");
    var XmlMode = require("ace/mode/xml").Mode;
    editor.getSession().setMode(new XmlMode());

    var editor2 = ace.edit("editor2");
    editor2.setTheme("ace/theme/twilight");
    editor2.getSession().setMode(new XmlMode());

};
</script>
    <script src="@Url.Content("~/Scripts/AceEditor/ace.js")" type="text/javascript" charset="utf-8"> </script>
    <script src="@Url.Content("~/Scripts/AceEditor/ext-modelist.js")" type="text/javascript" charset="utf-8"></script>
    <script>
                var Editor = ace.edit("Editor");
                Editor.setTheme("ace/theme/twilight");
                Editor.session.setMode("ace/mode/Text");
                Editor.$blockScrolling = Infinity;

                var TypingTimer;                //timer identifier
                var DoneTypingInterval = 500;  //time in ms, 5 second for example

                //on keyup, start the countdown
                $('#Editor').on("keyup", function () {
                    if (TypingTimer) clearTimeout(TypingTimer);                 // Clear if already set
                    TypingTimer = setTimeout(DoneTyping, DoneTypingInterval);
                });

                //on keydown, clear the countdown
                $('#Editor').on("keydown", function () {
                    clearTimeout(TypingTimer);
                    var Selected = $('#tree').jstree(true).get_selected('full', true)
                    Selected = Selected[0]
                    if (Selected.type == 'file')
                    {
                        $('#EditorInfo').text('File will save when you stop editing');
                    }
                });

                //user is "finished typing," do something
                function DoneTyping()
                {
                    var Selected = $('#tree').jstree(true).get_selected('full', true)
                    Selected = Selected[0]
                    var NewText = String(ace.edit("Editor").session.getValue());
                    if (Selected.type == 'file')
                    {
                        $.ajax({
                            url: '/Editor/SaveFile/',
                            data:{ 'ProjectID': Number(@Model.ID), 'FileID': Number(Selected.id), 'NewText': NewText},
                            method: 'POST',
                            success: function (ReturnData) {
                                $('#EditorInfo').text('File saved');
                            }
                        });
                    }
                }
    </script>
